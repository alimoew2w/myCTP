# encoding: UTF-8

################################################################################
##　william
## 加载系统模块
import os, os.path
import sys
import time
import csv
################################################################################


################################################################################
## william
##　增加路径
data_recorder_path = '/home/william/Documents/myCTP/vnpy1.6.1/vn.data/TickData/'

data_path   = '/home/william/Documents/myCTP/vnpy1.6.1/vn.data/'
trader_path = '/home/william/Documents/myCTP/vnpy1.6.1/vn.trader/'

sys.path.append(data_path) 
sys.path.append(trader_path)
################################################################################

################################################################################
## william 
## 配置文件
SETTING_FILENAME = 'VT_settingSavetIickData.json'
SETTING_FILENAME = os.path.join(trader_path, SETTING_FILENAME)  
################################################################################


################################################################################
## william 
## 开始调用定制模块


## /////////////////////////////////////////////////////////////////////////////
## SaveTickData
from vtEngineSaveTickData import MainEngine
import vtFunctionSaveTickData

print "\n#######################################################################"
print u"vtEngine 启动成功！！！"
print "#######################################################################\n"
## /////////////////////////////////////////////////////////////////////////////


################################################################################
## ========================== 开始启动主程序 ================================== ##
################################################################################

## /////////////////////////////////////////////////////////////////////////////
## 重载sys模块，设置默认字符串编码方式为utf8
reload(sys)
sys.setdefaultencoding('utf8')
## /////////////////////////////////////////////////////////////////////////////


## /////////////////////////////////////////////////////////////////////////////
## 初始化主引擎和主窗口对象
mainEngine = MainEngine()

print "\n#######################################################################"
print u"main 主函数启动成功！！！"
time.sleep(3)
print "#######################################################################\n"
## /////////////////////////////////////////////////////////////////////////////


## /////////////////////////////////////////////////////////////////////////////
## 保存 Tick Data 为 /data/csv

dataFile = os.path.join(data_recorder_path,(mainEngine.todayDate + '.csv'))  

if not os.path.exists(dataFile): 
    myHeader = ['timeStamp','date','time','symbol','exchange',\
                'lastPrice','preSettlementPrice','preClosePrice',\
                'openPrice','highestPrice','lowestPrice','closePrice',\
                'upperLimit','lowerLimit','settlementPrice','volume','turnover',\
                'preOpenInterest','openInterest','preDelta','currDelta',\
                'bidPrice1','bidPrice2','bidPrice3','bidPrice4','bidPrice5',\
                'askPrice1','askPrice2','askPrice3','askPrice4','askPrice5',\
                'bidVolume1','bidVolume2','bidVolume3','bidVolume4','bidVolume5',\
                'askVolume1','askVolume2','askVolume3','askVolume4','askVolume5',\
                'averagePrice']   
    with open(dataFile, 'w') as f:
        wr = csv.writer(f)
        wr.writerow(myHeader)
    f.close()
## /////////////////////////////////////////////////////////////////////////////


## /////////////////////////////////////////////////////////////////////////////
## 默认启动连接 CTP 
gatewayName = 'CTP'
print U"GatewayName:", gatewayName

try:
    mainEngine.connect(gatewayName)
    print u"CTP 正在登录!!!",
    for i in range(30):
        print ".",
        time.sleep(.25)
    print "\n#---------------------------------------------------------------"
    print u"CTP 连接成功!!!"
    print "#---------------------------------------------------------------"
except:
    print "#---------------------------------------------------------------"
    print u"CTP 连接失败!!!"
    print "#---------------------------------------------------------------"
## /////////////////////////////////////////////////////////////////////////////


## /////////////////////////////////////////////////////////////////////////////
## 更新 /dataRecorder/DR_setting
vtFunctionSaveTickData.refreshDatarecodeSymbol()
print "\n#######################################################################"
print u"DR_setting 已经更新完成!!!"
print "#######################################################################\n"
## /////////////////////////////////////////////////////////////////////////////


## /////////////////////////////////////////////////////////////////////////////
print "\n#######################################################################"
print u"正在下载 CTP Tick Data !!!"
print "#######################################################################\n"
## /////////////////////////////////////////////////////////////////////////////
